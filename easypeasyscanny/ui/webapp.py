try:
    import webview
except ImportError:
    webview = None

import json, time
from ..infra.logger import get_logger
from ..infra.hotkeys import STATE
logger = get_logger(__name__)

UI_HTML = "\n<!DOCTYPE html>\n<html lang=\"de\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Regolith Mining Analyzer</title>\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n\n        body {\n            background: linear-gradient(135deg, rgba(26, 26, 46, 0.95), rgba(15, 52, 96, 0.95));\n            color: #00d4ff;\n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n            overflow-x: hidden;\n        }\n\n        .container {\n            max-width: 1000px;\n            margin: 0 auto;\n            padding: 20px;\n        }\n\n        .header {\n            text-align: center;\n            margin-bottom: 30px;\n            padding: 20px;\n            background: rgba(15, 52, 96, 0.3);\n            border: 2px solid #00d4ff;\n            border-radius: 10px;\n        }\n\n        .header h1 {\n            font-size: 2.5em;\n            background: linear-gradient(45deg, #00d4ff, #45b7d1);\n            background-clip: text;\n            -webkit-background-clip: text;\n            -webkit-text-fill-color: transparent;\n            margin-bottom: 10px;\n        }\n\n        .controls {\n            background: rgba(22, 33, 62, 0.8);\n            border: 2px solid rgba(0, 212, 255, 0.3);\n            border-radius: 15px;\n            padding: 25px;\n            margin-bottom: 25px;\n        }\n\n        .input-group {\n            margin-bottom: 20px;\n        }\n\n        .input-group label {\n            display: block;\n            margin-bottom: 8px;\n            font-weight: bold;\n            color: #00d4ff;\n        }\n\n        #signalInput {\n            width: 100%;\n            padding: 15px;\n            font-size: 1.5em;\n            text-align: center;\n            background: rgba(15, 20, 25, 0.9);\n            border: 2px solid rgba(0, 212, 255, 0.5);\n            border-radius: 8px;\n            color: #00d4ff;\n            font-family: 'Courier New', monospace;\n        }\n\n        #signalInput:focus {\n            outline: none;\n            border-color: #00d4ff;\n            box-shadow: 0 0 10px rgba(0, 212, 255, 0.3);\n        }\n\n        #systemSelect {\n            width: 100%;\n            padding: 15px;\n            font-size: 1.2em;\n            text-align: center;\n            background: rgba(15, 20, 25, 0.9);\n            border: 2px solid rgba(0, 212, 255, 0.5);\n            border-radius: 8px;\n            color: #00d4ff;\n            font-weight: bold;\n            cursor: pointer;\n        }\n\n        #systemSelect:focus {\n            outline: none;\n            border-color: #00d4ff;\n            box-shadow: 0 0 10px rgba(0, 212, 255, 0.3);\n        }\n\n        .timer-group {\n            display: flex;\n            align-items: center;\n            gap: 10px;\n            margin-top: 15px;\n        }\n\n        .timer-group label {\n            color: #7fb3d3;\n            font-size: 0.9em;\n            white-space: nowrap;\n        }\n\n        #timerInput {\n            width: 80px;\n            padding: 8px;\n            font-size: 1em;\n            text-align: center;\n            background: rgba(15, 20, 25, 0.9);\n            border: 2px solid rgba(0, 212, 255, 0.5);\n            border-radius: 5px;\n            color: #00d4ff;\n            font-family: 'Courier New', monospace;\n        }\n\n        #timerInput:focus {\n            outline: none;\n            border-color: #00d4ff;\n        }\n\n        .button-group {\n            display: flex;\n            gap: 15px;\n            flex-wrap: wrap;\n            margin-top: 15px;\n        }\n\n        .btn {\n            padding: 12px 20px;\n            border: none;\n            border-radius: 8px;\n            font-size: 1em;\n            font-weight: bold;\n            cursor: pointer;\n            transition: all 0.3s ease;\n            text-transform: uppercase;\n        }\n\n        .btn-gaming {\n            background: #27ae60;\n            color: white;\n        }\n\n        .btn-gaming:hover {\n            background: #2ecc71;\n            transform: translateY(-2px);\n        }\n\n        .btn-gaming.active {\n            background: #e74c3c;\n        }\n\n        .btn-overlay {\n            background: #9b59b6;\n            color: white;\n        }\n\n        .btn-overlay:hover {\n            background: #8e44ad;\n            transform: translateY(-2px);\n        }\n\n        .btn-overlay.active {\n            background: #2ecc71;\n        }\n\n        .history {\n            background: rgba(22, 33, 62, 0.6);\n            border: 2px solid rgba(0, 212, 255, 0.3);\n            border-radius: 10px;\n            padding: 15px;\n            margin-bottom: 25px;\n        }\n\n        .history-header {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            margin-bottom: 10px;\n        }\n\n        .history h3 {\n            margin: 0;\n            color: #00d4ff;\n        }\n\n        .btn-reset {\n            padding: 6px 12px;\n            background: #e74c3c;\n            color: white;\n            border: none;\n            border-radius: 5px;\n            font-size: 0.85em;\n            font-weight: bold;\n            cursor: pointer;\n            transition: all 0.2s ease;\n        }\n\n        .btn-reset:hover {\n            background: #c0392b;\n            transform: translateY(-1px);\n        }\n\n        .history-buttons {\n            display: flex;\n            flex-wrap: wrap;\n            gap: 8px;\n        }\n\n        .history-btn {\n            padding: 8px 12px;\n            background: rgba(15, 52, 96, 0.7);\n            border: 1px solid rgba(0, 212, 255, 0.5);\n            border-radius: 5px;\n            color: #00d4ff;\n            cursor: pointer;\n            font-family: 'Courier New', monospace;\n            font-size: 0.9em;\n            transition: all 0.2s ease;\n        }\n\n        .history-btn:hover {\n            background: rgba(30, 90, 150, 0.8);\n            transform: translateY(-1px);\n        }\n\n        .results {\n            display: none;\n        }\n\n        .results.show {\n            display: block;\n        }\n\n        .result-header {\n            background: rgba(15, 52, 96, 0.8);\n            border: 2px solid #00d4ff;\n            border-radius: 10px;\n            padding: 20px;\n            text-align: center;\n            margin-bottom: 20px;\n        }\n\n        .no-match {\n            background: rgba(44, 24, 16, 0.9);\n            border: 2px solid #ff6b6b;\n            border-radius: 10px;\n            padding: 30px;\n            text-align: center;\n            color: #ff6b6b;\n        }\n\n        .rock-grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n            gap: 20px;\n        }\n\n        .rock-card {\n            background: rgba(22, 33, 62, 0.9);\n            border: 3px solid;\n            border-radius: 15px;\n            padding: 20px;\n            transition: all 0.3s ease;\n            position: relative;\n        }\n\n        .rock-card:hover {\n            transform: translateY(-5px);\n            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);\n        }\n\n        .pagination {\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            gap: 5px;\n            margin-top: 8px;\n            padding-top: 8px;\n            border-top: 1px solid rgba(255, 255, 255, 0.1);\n        }\n\n        .pagination-btn {\n            padding: 4px 8px;\n            background: rgba(0, 212, 255, 0.2);\n            border: 1px solid rgba(0, 212, 255, 0.4);\n            border-radius: 3px;\n            color: #00d4ff;\n            cursor: pointer;\n            font-size: 0.8em;\n            transition: all 0.2s ease;\n            min-width: 30px;\n            text-align: center;\n        }\n\n        .pagination-btn:hover {\n            background: rgba(0, 212, 255, 0.4);\n            transform: translateY(-1px);\n        }\n\n        .pagination-btn.active {\n            background: #00d4ff;\n            color: #1a1a2e;\n            font-weight: bold;\n        }\n\n        .pagination-btn.disabled {\n            opacity: 0.4;\n            cursor: not-allowed;\n        }\n\n        .pagination-ellipsis {\n            color: #7fb3d3;\n            padding: 0 5px;\n        }\n\n        .rock-header {\n            padding: 15px;\n            border-radius: 10px;\n            margin-bottom: 15px;\n            text-align: center;\n        }\n\n        .rock-name {\n            font-size: 1.4em;\n            font-weight: bold;\n            color: white;\n        }\n\n        .rock-info {\n            display: grid;\n            grid-template-columns: 1fr 1fr;\n            gap: 10px;\n            margin-bottom: 15px;\n        }\n\n        .info-item {\n            display: flex;\n            justify-content: space-between;\n            padding: 8px;\n            background: rgba(15, 20, 25, 0.5);\n            border-radius: 5px;\n        }\n\n        .info-label {\n            color: #7fb3d3;\n        }\n\n        .info-value {\n            font-weight: bold;\n        }\n\n        .signal-value {\n            color: #00d4ff;\n            font-family: 'Courier New', monospace;\n        }\n\n        .value-amount {\n            color: #2ecc71;\n        }\n\n        .multima-badge {\n            color: #f39c12;\n            font-weight: bold;\n        }\n\n        .rock-description {\n            background: rgba(15, 20, 25, 0.7);\n            padding: 15px;\n            border-radius: 8px;\n            color: #b0b0b0;\n            line-height: 1.4;\n            margin-bottom: 15px;\n        }\n\n        .accuracy-bar {\n            background: rgba(15, 20, 25, 0.7);\n            border-radius: 10px;\n            padding: 10px;\n        }\n\n        .accuracy-label {\n            display: flex;\n            justify-content: space-between;\n            margin-bottom: 5px;\n            font-size: 0.9em;\n        }\n\n        .progress-bg {\n            background: rgba(15, 20, 25, 0.8);\n            height: 8px;\n            border-radius: 4px;\n            overflow: hidden;\n        }\n\n        .progress-fill {\n            height: 100%;\n            background: linear-gradient(90deg, #2ecc71, #27ae60);\n            border-radius: 4px;\n            transition: width 0.5s ease;\n        }\n\n        .tier-1 .rock-header { background: linear-gradient(45deg, #808080, #a0a0a0); }\n        .tier-2 .rock-header { background: linear-gradient(45deg, #4169e1, #6fa8f5); }\n        .tier-3 .rock-header { background: linear-gradient(45deg, #9932cc, #b965e0); }\n        .tier-4 .rock-header { background: linear-gradient(45deg, #ffd700, #ffed4e); }\n\n        .tier-1 { border-color: #808080; }\n        .tier-2 { border-color: #4169e1; }\n        .tier-3 { border-color: #9932cc; }\n        .tier-4 { border-color: #ffd700; }\n\n        .multima-alert {\n            background: rgba(44, 62, 80, 0.9);\n            border: 2px solid #f39c12;\n            border-radius: 10px;\n            padding: 15px;\n            margin-bottom: 20px;\n            text-align: center;\n            color: #f39c12;\n            font-weight: bold;\n        }\n\n        .gaming-status {\n            position: fixed;\n            top: 10px;\n            right: 10px;\n            background: rgba(0, 0, 0, 0.8);\n            color: #00ff00;\n            padding: 10px;\n            border-radius: 5px;\n            font-family: 'Courier New', monospace;\n            font-size: 12px;\n            display: none;\n        }\n\n        .gaming-status.active {\n            display: block;\n        }\n\n        .overlay-status {\n            position: fixed;\n            top: 40px;\n            right: 10px;\n            background: rgba(155, 89, 182, 0.8);\n            color: #ffffff;\n            padding: 8px;\n            border-radius: 5px;\n            font-family: 'Courier New', monospace;\n            font-size: 10px;\n            display: none;\n        }\n\n        .overlay-status.active {\n            display: block;\n        }\n\n        .price-list {\n            position: fixed;\n            bottom: 20px;\n            left: 20px;\n            background: rgba(26, 26, 46, 0.9);\n            border: 2px solid rgba(0, 212, 255, 0.4);\n            border-radius: 10px;\n            padding: 20px 30px;\n            display: none;\n            z-index: 1000;\n            backdrop-filter: blur(5px);\n        }\n\n        .price-list.show {\n            display: block;\n        }\n\n        .price-list h2 {\n            text-align: center;\n            margin-bottom: 15px;\n            color: #00d4ff;\n            font-size: 1.5em;\n        }\n\n        .price-tables {\n            display: grid;\n            grid-template-columns: 1fr 1fr;\n            gap: 30px;\n        }\n\n        .price-table {\n            min-width: 300px;\n        }\n\n        .price-table table {\n            width: 100%;\n            border-collapse: collapse;\n        }\n\n        .price-table th {\n            padding: 8px;\n            text-align: left;\n            border-bottom: 2px solid rgba(0, 212, 255, 0.3);\n            color: #7fb3d3;\n            font-size: 0.9em;\n        }\n\n        .price-table td {\n            padding: 6px 8px;\n            border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n        }\n\n        .price-table .resource-name {\n            font-weight: bold;\n            text-shadow: \n                -1px -1px 0 #000,\n                 1px -1px 0 #000,\n                -1px  1px 0 #000,\n                 1px  1px 0 #000;\n        }\n\n        .price-table .price {\n            text-align: right;\n            color: #b0b0b0;\n        }\n\n        .price-quantainium { color: #FFD700; }\n        .price-bexalite { color: #90EE90; }\n        .price-borase { color: #90EE90; }\n        .price-taranite { color: #90EE90; }\n        .price-laranite { color: #90EE90; }\n        .price-agricium { color: #90EE90; }\n        .price-hephaestanite { color: #ffffff; }\n        .price-titanium { color: #ffffff; }\n    </style>\n</head>\n<body tabindex=\"0\">\n    <div class=\"gaming-status\" id=\"gamingStatus\">\n        GAMING-MODUS AKTIV - NUMPAD BEREIT\n    </div>\n\n    <div class=\"overlay-status\" id=\"overlayStatus\">\n        SC-OVERLAY AKTIV\n    </div>\n\n    <div class=\"container\">\n        <div class=\"header\">\n            <h1>\ud83d\udef0\ufe0f REGOLITH MINING ANALYZER</h1>\n            <p>Star Citizen Signal Detection System</p>\n        </div>\n\n        <div class=\"controls\">\n            <div style=\"display: grid; grid-template-columns: 2fr 1fr; gap: 15px; align-items: start;\">\n                <div class=\"input-group\">\n                    <label for=\"signalInput\">Signal St\u00e4rke eingeben:</label>\n                    <input type=\"text\" id=\"signalInput\" placeholder=\"1800\" maxlength=\"6\" inputmode=\"numeric\">\n                </div>\n\n                <div class=\"input-group\">\n                    <label for=\"systemSelect\">System:</label>\n                    <select id=\"systemSelect\">\n                        <option value=\"STANTON\">STANTON</option>\n                        <option value=\"PYRO\">PYRO</option>\n                    </select>\n                </div>\n            </div>\n\n            <div class=\"timer-group\">\n                <label for=\"timerInput\">Overlay Auto-Hide:</label>\n                <input type=\"text\" id=\"timerInput\" min=\"1\" max=\"300\" value=\"10\" maxlength=\"3\" inputmode=\"numeric\">\n                <label>Sekunden</label>\n            </div>\n\n            <div class=\"button-group\">\n                <button id=\"gamingBtn\" class=\"btn btn-gaming\">\ud83c\udfae GAMING-MODUS</button>\n                <button id=\"overlayBtn\" class=\"btn btn-overlay\">\ud83c\udfaf SC-OVERLAY</button>\n            </div>\n\n            <p style=\"margin-top: 10px; color: #7fb3d3; font-size: 0.9em;\">\n                Eingabe: Numpad 0-9 | Numpad +: Suchen | Numpad -: Preisliste | ESC: L\u00f6schen<br>\n                SC-Overlay: Zeigt Ergebnisse \u00fcber Star Citizen\n            </p>\n        </div>\n\n        <div class=\"history\">\n            <div class=\"history-header\">\n                <h3>\ud83d\udcca Letzte Scans:</h3>\n                <button id=\"resetBtn\" class=\"btn-reset\">\ud83d\uddd1\ufe0f RESET</button>\n            </div>\n            <div id=\"historyButtons\" class=\"history-buttons\">\n            </div>\n        </div>\n\n        <div id=\"results\" class=\"results\">\n        </div>\n\n        <div id=\"priceList\" class=\"price-list\">\n            <h2>Mineable Ore Prices</h2>\n            <div class=\"price-tables\">\n                <div class=\"price-table\">\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>Resource</th>\n                                <th>Price (Raw)</th>\n                                <th>Price (Refined)</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td class=\"resource-name price-quantainium\">Quantainium</td>\n                                <td class=\"price\">44.00</td>\n                                <td class=\"price\">88.00</td>\n                            </tr>\n                            <tr>\n                                <td class=\"resource-name price-bexalite\">Bexalite</td>\n                                <td class=\"price\">20.33</td>\n                                <td class=\"price\">44.00</td>\n                            </tr>\n                            <tr>\n                                <td class=\"resource-name price-borase\">Borase</td>\n                                <td class=\"price\">16.29</td>\n                                <td class=\"price\">35.21</td>\n                            </tr>\n                            <tr>\n                                <td class=\"resource-name price-taranite\">Taranite</td>\n                                <td class=\"price\">16.29</td>\n                                <td class=\"price\">35.21</td>\n                            </tr>\n                            <tr>\n                                <td class=\"resource-name price-laranite\">Laranite</td>\n                                <td class=\"price\">15.51</td>\n                                <td class=\"price\">30.94</td>\n                            </tr>\n                            <tr>\n                                <td class=\"resource-name price-agricium\">Agricium</td>\n                                <td class=\"price\">13.75</td>\n                                <td class=\"price\">27.50</td>\n                            </tr>\n                            <tr>\n                                <td class=\"resource-name price-hephaestanite\">Hephaestanite</td>\n                                <td class=\"price\">7.38</td>\n                                <td class=\"price\">15.85</td>\n                            </tr>\n                            <tr>\n                                <td class=\"resource-name price-titanium\">Titanium</td>\n                                <td class=\"price\">4.47</td>\n                                <td class=\"price\">8.78</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n                <div class=\"price-table\">\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>Resource</th>\n                                <th>Price (Raw)</th>\n                                <th>Price (Refined)</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td class=\"resource-name\">Diamond</td>\n                                <td class=\"price\">3.68</td>\n                                <td class=\"price\">7.35</td>\n                            </tr>\n                            <tr>\n                                <td class=\"resource-name\">Gold</td>\n                                <td class=\"price\">3.20</td>\n                                <td class=\"price\">6.41</td>\n                            </tr>\n                            <tr>\n                                <td class=\"resource-name\">Copper</td>\n                                <td class=\"price\">2.87</td>\n                                <td class=\"price\">6.16</td>\n                            </tr>\n                            <tr>\n                                <td class=\"resource-name\">Beryl</td>\n                                <td class=\"price\">2.21</td>\n                                <td class=\"price\">4.35</td>\n                            </tr>\n                            <tr>\n                                <td class=\"resource-name\">Tungsten</td>\n                                <td class=\"price\">2.05</td>\n                                <td class=\"price\">4.06</td>\n                            </tr>\n                            <tr>\n                                <td class=\"resource-name\">Corundum</td>\n                                <td class=\"price\">1.35</td>\n                                <td class=\"price\">2.70</td>\n                            </tr>\n                            <tr>\n                                <td class=\"resource-name\">Quartz</td>\n                                <td class=\"price\">0.78</td>\n                                <td class=\"price\">1.55</td>\n                            </tr>\n                            <tr>\n                                <td class=\"resource-name\">Aluminum</td>\n                                <td class=\"price\">0.67</td>\n                                <td class=\"price\">1.30</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <script>\n        let currentInput = '';\n        let gamingMode = false;\n        let overlayEnabled = true;\n        let overlayTimer = 10;\n        let priceListVisible = false;\n        let cardPages = {};\n        let currentSystem = 'STANTON';\n        let resumeListenerTimer = null; // Timer f\u00fcr verz\u00f6gertes Resume\n\n        const signalInput = document.getElementById('signalInput');\n        const timerInput = document.getElementById('timerInput');\n        const systemSelect = document.getElementById('systemSelect');\n        const results = document.getElementById('results');\n        const historyButtons = document.getElementById('historyButtons');\n        const gamingBtn = document.getElementById('gamingBtn');\n        const overlayBtn = document.getElementById('overlayBtn');\n        const resetBtn = document.getElementById('resetBtn');\n        const gamingStatus = document.getElementById('gamingStatus');\n        const overlayStatus = document.getElementById('overlayStatus');\n        const priceList = document.getElementById('priceList');\n\n        document.addEventListener('keydown', handleKeyPress);\n        gamingBtn.addEventListener('click', toggleGamingMode);\n        overlayBtn.addEventListener('click', toggleOverlay);\n        resetBtn.addEventListener('click', resetScans);\n        timerInput.addEventListener('change', updateOverlayTimer);\n        systemSelect.addEventListener('change', changeSystem);\n\n        // Focus-Management f\u00fcr Gaming-Modus mit verz\u00f6gertem Resume\n        signalInput.addEventListener('focus', () => {\n            // Cancel pending resume timer\n            if (resumeListenerTimer) {\n                clearTimeout(resumeListenerTimer);\n                resumeListenerTimer = null;\n            }\n            if (gamingMode) {\n                console.log('[DEBUG] Input fokussiert - pausiere Gaming-Listener');\n                pywebview.api.pause_gaming_listener();\n            }\n        });\n\n        signalInput.addEventListener('blur', () => {\n            // Synchronisiere currentInput beim Verlassen des Feldes\n            currentInput = signalInput.value;\n            if (gamingMode) {\n                // Verz\u00f6gertes Resume - wird gecancelt wenn neues Input fokussiert wird\n                resumeListenerTimer = setTimeout(() => {\n                    console.log('[DEBUG] Input verliert Focus - setze Gaming-Listener fort (verz\u00f6gert)');\n                    pywebview.api.resume_gaming_listener();\n                    resumeListenerTimer = null;\n                }, 150); // 150ms Verz\u00f6gerung\n            }\n        });\n\n        timerInput.addEventListener('focus', () => {\n            // Cancel pending resume timer\n            if (resumeListenerTimer) {\n                clearTimeout(resumeListenerTimer);\n                resumeListenerTimer = null;\n            }\n            if (gamingMode) {\n                console.log('[DEBUG] Timer-Input fokussiert - pausiere Gaming-Listener');\n                pywebview.api.pause_gaming_listener();\n            }\n        });\n\n        timerInput.addEventListener('blur', () => {\n            if (gamingMode) {\n                // Verz\u00f6gertes Resume - wird gecancelt wenn neues Input fokussiert wird\n                resumeListenerTimer = setTimeout(() => {\n                    console.log('[DEBUG] Timer-Input verliert Focus - setze Gaming-Listener fort (verz\u00f6gert)');\n                    pywebview.api.resume_gaming_listener();\n                    resumeListenerTimer = null;\n                }, 150); // 150ms Verz\u00f6gerung\n            }\n        });\n\n        systemSelect.addEventListener('focus', () => {\n            // Cancel pending resume timer\n            if (resumeListenerTimer) {\n                clearTimeout(resumeListenerTimer);\n                resumeListenerTimer = null;\n            }\n            if (gamingMode) {\n                console.log('[DEBUG] System-Select fokussiert - pausiere Gaming-Listener');\n                pywebview.api.pause_gaming_listener();\n            }\n        });\n\n        systemSelect.addEventListener('blur', () => {\n            if (gamingMode) {\n                // Verz\u00f6gertes Resume - wird gecancelt wenn neues Input fokussiert wird\n                resumeListenerTimer = setTimeout(() => {\n                    console.log('[DEBUG] System-Select verliert Focus - setze Gaming-Listener fort (verz\u00f6gert)');\n                    pywebview.api.resume_gaming_listener();\n                    resumeListenerTimer = null;\n                }, 150); // 150ms Verz\u00f6gerung\n            }\n        });\n\n        // Nur Zahlen in Input-Feldern zulassen\n        signalInput.addEventListener('input', (e) => {\n            // Entferne alle nicht-numerischen Zeichen\n            e.target.value = e.target.value.replace(/[^0-9]/g, '');\n            // NICHT mehr synchronisieren w\u00e4hrend der Eingabe - nur beim blur\n        });\n\n        timerInput.addEventListener('input', (e) => {\n            // Entferne alle nicht-numerischen Zeichen\n            e.target.value = e.target.value.replace(/[^0-9]/g, '');\n        });\n\n        function handleKeyPress(event) {\n            const target = event.target;\n            const key = event.key;\n\n            // Komplett ignorieren f\u00fcr SELECT und INPUT-Felder (der Gaming-Listener ist pausiert)\n            if (target.tagName === 'SELECT' || target.tagName === 'INPUT') {\n                return; // Lasse normale Eingabe zu\n            }\n\n            // Nur f\u00fcr den Body/Document (au\u00dferhalb von Inputs)\n            if ((key >= '0' && key <= '9') || \n                (key.startsWith('Numpad') && key.length === 7 && !isNaN(key.slice(-1)))) {\n\n                let number;\n                if (key.startsWith('Numpad')) {\n                    number = key.slice(-1);\n                } else {\n                    number = key;\n                }\n\n                currentInput += number;\n                updateDisplay();\n                event.preventDefault();\n            }\n            else if (key === '+' || key === 'NumpadAdd') {\n                if (currentInput) {\n                    searchSignal(currentInput);\n                    currentInput = '';\n                    updateDisplay();\n                }\n                event.preventDefault();\n            }\n            else if (key === '-' || key === 'NumpadSubtract') {\n                togglePriceList();\n                event.preventDefault();\n            }\n            else if (key === 'Backspace') {\n                currentInput = currentInput.slice(0, -1);\n                updateDisplay();\n                event.preventDefault();\n            }\n            else if (key === 'Escape') {\n                currentInput = '';\n                updateDisplay();\n                hideResults();\n                event.preventDefault();\n            }\n        }\n\n        function updateDisplay() {\n            signalInput.value = currentInput;\n        }\n\n        function updateOverlayTimer() {\n            const seconds = parseInt(timerInput.value);\n            if (seconds >= 1 && seconds <= 300) {\n                pywebview.api.set_overlay_timer(seconds).then(result => {\n                    if (result.success) {\n                        overlayTimer = seconds;\n                        console.log('Overlay-Timer aktualisiert:', seconds, 's');\n                    } else {\n                        alert('Fehler: ' + result.error);\n                        timerInput.value = overlayTimer;\n                    }\n                });\n            } else {\n                alert('Timer muss zwischen 1 und 300 Sekunden sein');\n                timerInput.value = overlayTimer;\n            }\n        }\n\n        function changeSystem() {\n            const newSystem = systemSelect.value;\n            console.log('[DEBUG] Wechsle System zu:', newSystem);\n            pywebview.api.change_system(newSystem).then(result => {\n                console.log('[DEBUG] change_system Antwort:', result);\n                if (result.success) {\n                    currentSystem = newSystem;\n                    console.log('[INFO] System gewechselt zu:', newSystem, '(' + result.rocks_count + ' Rocks)');\n                    console.log('[DEBUG] Historie empfangen:', result.history ? result.history.length : 0, 'Eintr\u00e4ge');\n                    if (result.history && result.history.length > 0) {\n                        console.log('[DEBUG] Erste Historie:', result.history[0]);\n                    }\n                    hideResults();\n                    // Lade Historie f\u00fcr das neue System\n                    updateHistory(result.history);\n                } else {\n                    alert('Fehler beim Systemwechsel: ' + result.error);\n                    systemSelect.value = currentSystem;\n                }\n            }).catch(err => {\n                console.error('[ERROR] Systemwechsel fehlgeschlagen:', err);\n            });\n        }\n\n        function searchSignal(signal) {\n            pywebview.api.search_signal(signal).then(result => {\n                if (result.success) {\n                    displayResults(result);\n                    updateHistory(result.history);\n                } else {\n                    alert('Fehler: ' + result.error);\n                }\n            });\n        }\n\n        function displayResults(result) {\n            const signal = result.signal;\n            const matches = result.matches;\n            const timestamps = result.timestamps;\n\n            if (matches.length === 0) {\n                results.innerHTML = `\n                    <div class=\"no-match\">\n                        <h2>\u26a0\ufe0f KEIN MATCH GEFUNDEN</h2>\n                        <p>Kein bekanntes Mineral mit Signal ${signal} \u00b150</p>\n                    </div>\n                `;\n            } else {\n                let html = `\n                    <div class=\"result-header\">\n                        <h2>\ud83d\udd0d SCAN ERGEBNISSE F\u00dcR SIGNAL ${signal}</h2>\n                `;\n\n                if (matches.length > 1) {\n                    html += '<p style=\"color: #2ecc71; font-weight: bold; margin-top: 5px;\">\ud83c\udfaf MULTIMA-FORMATION ERKANNT!</p>';\n                }\n\n                const hasMultima = matches.some(rock => rock.multima_factor > 1);\n                if (hasMultima) {\n                    html += '<div class=\"multima-alert\">\u26a1 HOCHKONZENTRIERTE MULTIMA-SIGNALE ERKANNT!</div>';\n                }\n\n                html += '</div><div class=\"rock-grid\">';\n\n                matches.forEach(rock => {\n                    html += createRockCard(rock, timestamps);\n                });\n\n                html += '</div>';\n                results.innerHTML = html;\n            }\n\n            results.classList.add('show');\n        }\n\n        function createRockCard(rock, timestamps) {\n            const tierClass = `tier-${rock.tier}`;\n            const isMultima = rock.multima_factor > 1;\n            const cardId = `card-${rock.signal}`;\n\n            if (!cardPages[cardId]) {\n                cardPages[cardId] = 1;\n            }\n\n            const currentPage = cardPages[cardId];\n            const itemsPerPage = 10;\n            const totalPages = Math.ceil(timestamps.length / itemsPerPage);\n\n            const startIndex = (currentPage - 1) * itemsPerPage;\n            const endIndex = Math.min(startIndex + itemsPerPage, timestamps.length);\n            const displayTimestamps = timestamps.slice(startIndex, endIndex).reverse();\n\n            let timestampList = '';\n            if (displayTimestamps && displayTimestamps.length > 0) {\n                timestampList = displayTimestamps.map((ts, index) => {\n                    const globalIndex = timestamps.length - startIndex - index;\n                    return `<div style=\"padding: 3px 0; font-size: 0.85em;\">\n                        <span style=\"color: #00d4ff; font-weight: bold;\">#${globalIndex}</span>\n                        <span style=\"color: #b0b0b0;\"> \u2192 ${ts}</span>\n                    </div>`;\n                }).join('');\n            }\n\n            let pagination = '';\n            if (totalPages > 1) {\n                pagination = createPagination(currentPage, totalPages, cardId);\n            }\n\n            const stats = rock.stats || {};\n            const statsTable = `\n    <div style=\"margin-top: 15px; padding: 10px; background: rgba(15, 20, 25, 0.5); border-radius: 5px;\">\n        <div style=\"color: #00d4ff; font-weight: bold; margin-bottom: 8px; font-size: 0.9em;\">\n            \ud83d\udcca Gesteins-Statistiken:\n        </div>\n        <table style=\"width: 100%; font-size: 0.85em;\">\n            <tr style=\"background: rgba(40, 40, 50, 0.7); border-bottom: 1px solid rgba(255, 255, 255, 0.2);\">\n                <th style=\"text-align: left; padding: 5px; color: #7fb3d3;\"></th>\n                <th style=\"text-align: center; padding: 5px; color: #aaaaaa;\">Min</th>\n                <th style=\"text-align: center; padding: 5px; color: #aaaaaa;\">Max</th>\n                <th style=\"text-align: center; padding: 5px; color: #aaaaaa;\">Med</th>\n            </tr>\n            <tr>\n                <td style=\"padding: 5px; color: #cccccc;\">Cluster Rocks</td>\n                <td style=\"text-align: center; padding: 5px; color: #ffffff;\">${stats.cluster?.min || 1}</td>\n                <td style=\"text-align: center; padding: 5px; color: #ffffff;\">${stats.cluster?.max || 11}</td>\n                <td style=\"text-align: center; padding: 5px; color: #ffffff;\">${stats.cluster?.med || 6}</td>\n            </tr>\n            <tr>\n                <td style=\"padding: 5px; color: #cccccc;\">Rock Mass (t)</td>\n                <td style=\"text-align: center; padding: 5px; color: #ffffff;\">${stats.mass?.min || '0'}</td>\n                <td style=\"text-align: center; padding: 5px; color: #ffffff;\">${stats.mass?.max || '182k'}</td>\n                <td style=\"text-align: center; padding: 5px; color: #ffffff;\">${stats.mass?.med || '8.9k'}</td>\n            </tr>\n            <tr>\n                <td style=\"padding: 5px; color: #cccccc;\">Instability</td>\n                <td style=\"text-align: center; padding: 5px; color: #ffffff;\">${stats.instability?.min || 0}</td>\n                <td style=\"text-align: center; padding: 5px; color: #ffffff;\">${stats.instability?.max || 711}</td>\n                <td style=\"text-align: center; padding: 5px; color: #ffffff;\">${stats.instability?.med || 46}</td>\n            </tr>\n            <tr>\n                <td style=\"padding: 5px; color: #cccccc;\">Resistance</td>\n                <td style=\"text-align: center; padding: 5px; color: #ffffff;\">${stats.resistance?.min || '0%'}</td>\n                <td style=\"text-align: center; padding: 5px; color: #ffffff;\">${stats.resistance?.max || '64%'}</td>\n                <td style=\"text-align: center; padding: 5px; color: #ffffff;\">${stats.resistance?.med || '16%'}</td>\n            </tr>\n        </table>\n    </div>\n`;\n\n            let mineralComposition = '';\n            if (rock.minerals && rock.minerals.length > 0) {\n                const mineralBars = rock.minerals.map(([name, percentage, color]) => `\n                    <div style=\"display: flex; align-items: center; gap: 8px; margin-bottom: 4px;\">\n                        <div style=\"flex: 1; background: rgba(40, 40, 50, 0.8); height: 16px; border-radius: 2px; position: relative; overflow: hidden;\">\n                            <div style=\"position: absolute; left: 0; top: 0; height: 100%; background: ${color}; width: ${percentage}%;\"></div>\n                            <span style=\"position: absolute; left: 6px; top: 50%; transform: translateY(-50%); font-size: 11px; font-weight: bold; color: #ffffff; text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;\">\n                                ${name}\n                            </span>\n                        </div>\n                        <span style=\"min-width: 35px; text-align: right; font-size: 11px; color: #ffffff; font-weight: bold;\">\n                            ${percentage}%\n                        </span>\n                    </div>\n                `).join('');\n\n                mineralComposition = `\n                    <div style=\"margin-top: 15px; padding: 10px; background: rgba(15, 20, 25, 0.5); border-radius: 5px;\">\n                        <div style=\"color: #00d4ff; font-weight: bold; margin-bottom: 8px; font-size: 0.9em;\">\n                            \u2697\ufe0f Mineralzusammensetzung:\n                        </div>\n                        ${mineralBars}\n                    </div>\n                `;\n            }\n\n            return `\n                <div class=\"rock-card ${tierClass}\" style=\"border-color: ${rock.color}40;\">\n                    <div class=\"rock-header\">\n                        <div class=\"rock-name\">\n                            ${isMultima ? '\u26a1' : '\ud83e\udea8'} ${rock.name}\n                            ${!isMultima ? `(Tier ${rock.tier})` : ''}\n                        </div>\n                    </div>\n\n                    <div class=\"rock-info\">\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Signal:</span>\n                            <span class=\"info-value signal-value\">${rock.signal}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Wert:</span>\n                            <span class=\"info-value value-amount\">${rock.value} aUEC/SCU</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Typ:</span>\n                            <span class=\"info-value\" style=\"color: #45b7d1;\">${rock.type}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">${isMultima ? 'Multima:' : 'Seltenheit:'}</span>\n                            <span class=\"info-value ${isMultima ? 'multima-badge' : ''}\" style=\"color: #ffcc5c;\">\n                                ${isMultima ? `${rock.multima_factor}x MULTIMA` : rock.rarity}\n                            </span>\n                        </div>\n                    </div>\n\n                    <div class=\"rock-description\">\n                        ${rock.description}\n                    </div>\n\n                    <div class=\"accuracy-bar\">\n                        <div class=\"accuracy-label\">\n                            <span>Genauigkeit:</span>\n                            <span style=\"color: #2ecc71;\">${rock.accuracy}%</span>\n                        </div>\n                        <div class=\"progress-bg\">\n                            <div class=\"progress-fill\" style=\"width: ${rock.accuracy}%;\"></div>\n                        </div>\n                    </div>\n\n                    ${statsTable}\n                    ${mineralComposition}\n\n                    ${timestampList ? `\n                    <div style=\"margin-top: 10px; padding: 10px; background: rgba(15, 20, 25, 0.6); border-radius: 5px; border-left: 3px solid #00d4ff;\">\n                        <div style=\"color: #00d4ff; font-weight: bold; margin-bottom: 5px; font-size: 0.9em;\">\n                            \ud83d\udd52 Scan-Historie (${timestamps.length} Scans):\n                        </div>\n                        <div>\n                            ${timestampList}\n                        </div>\n                        ${pagination}\n                    </div>\n                    ` : ''}\n                </div>\n            `;\n        }\n\n        function createPagination(currentPage, totalPages, cardId) {\n            let pages = [];\n\n            pages.push(1);\n\n            if (currentPage > 3) {\n                pages.push('...');\n            }\n\n            for (let i = Math.max(2, currentPage - 1); i <= Math.min(totalPages - 1, currentPage + 1); i++) {\n                if (!pages.includes(i)) {\n                    pages.push(i);\n                }\n            }\n\n            if (currentPage < totalPages - 2) {\n                pages.push('...');\n            }\n\n            if (totalPages > 1 && !pages.includes(totalPages)) {\n                pages.push(totalPages);\n            }\n\n            let html = '<div class=\"pagination\">';\n\n            pages.forEach(page => {\n                if (page === '...') {\n                    html += '<span class=\"pagination-ellipsis\">...</span>';\n                } else {\n                    const isActive = page === currentPage;\n                    html += `<button class=\"pagination-btn ${isActive ? 'active' : ''}\" \n                             onclick=\"changePage('${cardId}', ${page})\">${page}</button>`;\n                }\n            });\n\n            html += '</div>';\n            return html;\n        }\n\n        function changePage(cardId, page) {\n            cardPages[cardId] = page;\n            const signal = cardId.replace('card-', '');\n            searchSignal(signal);\n        }\n\n        function updateHistory(history) {\n            historyButtons.innerHTML = '';\n            history.forEach(item => {\n                const btn = document.createElement('button');\n                btn.className = 'history-btn';\n                btn.textContent = `${item.signal} (${item.count})`;\n                btn.onclick = () => {\n                    showCachedResults(item.signal.toString());\n                };\n                historyButtons.appendChild(btn);\n            });\n        }\n\n        function showCachedResults(signal) {\n            pywebview.api.get_cached_results(signal).then(result => {\n                if (result.success) {\n                    displayResults(result);\n                } else {\n                    alert('Fehler: ' + result.error);\n                }\n            });\n        }\n\n        function hideResults() {\n            results.classList.remove('show');\n        }\n\n        function togglePriceList() {\n            pywebview.api.toggle_price_overlay().then(result => {\n                if (result.success) {\n                    priceListVisible = result.visible;\n                    console.log('Preis-Overlay:', priceListVisible ? 'ge\u00f6ffnet' : 'geschlossen');\n                } else {\n                    console.error('Fehler beim Toggle Preis-Overlay:', result.error);\n                }\n            }).catch(err => {\n                console.error('Fehler beim Toggle Preis-Overlay:', err);\n            });\n        }\n\n        function toggleGamingMode() {\n            pywebview.api.toggle_gaming_mode().then(result => {\n                if (result.success) {\n                    updateGamingUI(result.active);\n                } else {\n                    alert('Fehler: ' + result.error);\n                }\n            });\n        }\n\n        function updateGamingUI(active) {\n            gamingMode = active;\n            gamingBtn.textContent = active ? '\ud83d\udd34 GAMING AKTIV' : '\ud83c\udfae GAMING-MODUS';\n            gamingBtn.className = active ? 'btn btn-gaming active' : 'btn btn-gaming';\n\n            if (active) {\n                gamingStatus.classList.add('active');\n            } else {\n                gamingStatus.classList.remove('active');\n            }\n        }\n\n        function updateOverlayUI(enabled) {\n            overlayEnabled = enabled;\n            overlayBtn.textContent = enabled ? '\ud83c\udfaf SC-OVERLAY AKTIV' : '\ud83c\udfaf SC-OVERLAY';\n            overlayBtn.className = enabled ? 'btn btn-overlay active' : 'btn btn-overlay';\n\n            if (enabled) {\n                overlayStatus.classList.add('active');\n            } else {\n                overlayStatus.classList.remove('active');\n            }\n        }\n\n        function toggleOverlay() {\n            pywebview.api.toggle_overlay().then(result => {\n                if (result.success) {\n                    updateOverlayUI(result.enabled);\n                } else {\n                    alert('Fehler: ' + result.error);\n                }\n            });\n        }\n\n        function resetScans() {\n            if (confirm('M\u00f6chtest du wirklich alle Scan-Historie l\u00f6schen?')) {\n                pywebview.api.reset_scans().then(result => {\n                    if (result.success) {\n                        historyButtons.innerHTML = '';\n                        console.log('Scan-Historie gel\u00f6scht');\n                    } else {\n                        alert('Fehler beim L\u00f6schen: ' + result.error);\n                    }\n                }).catch(err => {\n                    console.error('Fehler beim Reset:', err);\n                    alert('Fehler beim L\u00f6schen der Historie');\n                });\n            }\n        }\n\n        function addNumberFromGaming(number) {\n            currentInput += number;\n            updateDisplay();\n        }\n\n        function searchFromGaming() {\n            if (currentInput) {\n                searchSignal(currentInput);\n                currentInput = '';\n                updateDisplay();\n            }\n        }\n\n        function togglePriceListFromGaming() {\n            togglePriceList();\n        }\n\n        function resetFromGaming() {\n            currentInput = '';\n            updateDisplay();\n            hideResults();\n        }\n\n        function backspaceFromGaming() {\n            currentInput = currentInput.slice(0, -1);\n            updateDisplay();\n        }\n\n        function toggleGamingModeFromPython() {\n            toggleGamingMode();\n        }\n\n        function initializeApp() {\n            if (typeof pywebview === 'undefined' || !pywebview.api) {\n                console.log('Warte auf pywebview API...');\n                setTimeout(initializeApp, 100);\n                return;\n            }\n\n            console.log('pywebview API verf\u00fcgbar, initialisiere App...');\n            document.body.focus();\n\n            pywebview.api.get_history().then(history => {\n                console.log('Historie geladen:', history);\n                updateHistory(history);\n            }).catch(err => {\n                console.error('Fehler beim Laden der Historie:', err);\n            });\n\n            pywebview.api.get_initial_state().then(state => {\n                console.log('Initial State erfolgreich geladen:', state);\n\n                gamingMode = state.gaming_mode;\n                updateGamingUI(state.gaming_mode);\n\n                overlayEnabled = state.overlay_enabled;\n                updateOverlayUI(state.overlay_enabled);\n\n                overlayTimer = state.overlay_auto_hide_seconds;\n                timerInput.value = overlayTimer;\n\n                currentSystem = state.selected_system || 'STANTON';\n                systemSelect.value = currentSystem;\n\n                console.log('UI aktualisiert - Gaming:', gamingMode, 'Overlay:', overlayEnabled, 'Timer:', overlayTimer, 's', 'System:', currentSystem);\n            }).catch(err => {\n                console.error('Fehler beim Laden des Initial State:', err);\n                updateGamingUI(false);\n                updateOverlayUI(true);\n                timerInput.value = 10;\n                systemSelect.value = 'STANTON';\n            });\n        }\n\n        window.addEventListener('load', initializeApp);\n    </script>\n</body>\n</html>\n        "

class Api:
    def __init__(self, settings, analyzer, scans_store):
        self.settings = settings
        self.analyzer = analyzer
        self.scans_store = scans_store

    # UI-bound methods
    def get_settings(
    # === Legacy-kompatible API-Methoden ===
    def search_signal(self, value: int):
        return self.analyzer.analyze_and_store(int(value))

    def toggle_price_list_from_gaming(self):
        # Numpad- Trigger aus Gaming-Mode
        from ..ui.overlay import Overlays  # avoid circular import at module top
        return {"ok": True}

    def pause_gaming_listener(self):
        from ..infra.hotkeys import STATE
        STATE.active = False
        return {"ok": True, "active": STATE.active}

    def resume_gaming_listener(self):
        from ..infra.hotkeys import STATE
        STATE.active = True
        return {"ok": True, "active": STATE.active}
self):
        return {"selected_system": self.settings.selected_system, "debug_logging": self.settings.debug_logging, "systems": ["STANTON","PYRO"]}

    def get_history(self):
        return self.scans_store.read_all(self.settings.selected_system)

    def change_system(self, system: str):
        self.settings.selected_system = system
        return {"ok": True, "system": system}

    def toggle_debug(self, enabled: bool):
        self.settings.debug_logging = bool(enabled)
        return {"ok": True, "debug": self.settings.debug_logging}

    def scan_value(self, value: int):
        return self.analyzer.analyze_and_store(int(value))

    # Gaming listener focus control
    def set_focus_state(self, focused: bool):
        STATE.focused = bool(focused)
        return {"ok": True, "focused": STATE.focused}

def start_ui(settings, analyzer, scans_store):
    if webview is None:
        logger.info("pywebview nicht installiert – UI wird nicht gestartet (Hotkeys/Overlays laufen).")
        return
    api = Api(settings, analyzer, scans_store)
    window = webview.create_window("EasyPeasyScanny", html=UI_HTML, js_api=api, width=800, height=520)
    webview.start(private_mode=True, debug=False)
